---
title: "Redis complex data structures - part 2"
date: 2017-06-21
categories:
---


### Sorted Sets

We can work with [Sorted Sets](http://redis.io/commands#sorted_set) since Redis already supports them.

{% highlight ruby %}
zset1 = SortedSet.new([2, 1, 5, 6, 4, 5, 3, 3, 3])
REDIS.zadd('zet1', zet1.to_a)
#
{"db":0,"key":"set1_array","ttl":-1,"type":"set","value":["1","2","3"],"size":3}
{"db":0,"key":"set1","ttl":-1,"type":"set","value":["#<Set:0x007faed429db70>"],"size":23}
{% endhighlight %}



https://ruby-doc.org/stdlib-2.4.1/libdoc/set/rdoc/SortedSet.html


### Ranges

https://www.tutorialspoint.com/ruby/ruby_ranges.htm

One option is to convert range to array and then save it to Redis.  But that will require more memory.

{% highlight ruby %}

{% endhighlight %}


Another choice is to store the first element of the range and the last one.  We return those and let application handle it.  The problem is that we might need to loop through the items in the range and what if our process is restarted during that?




{% highlight ruby %}

{% endhighlight %}



### Linked lists

https://www.tutorialspoint.com/data_structures_algorithms/linked_list_algorithms.htm

https://www.sitepoint.com/rubys-missing-data-structure/



[Redis Lists](http://redis.io/topics/data-types#lists)






{% highlight ruby %}

{% endhighlight %}




### Binary trees


https://www.tutorialspoint.com/data_structures_algorithms/binary_search_tree.htm


http://rubyalgorithms.com/binary_search_tree.html



### Graphs

https://www.tutorialspoint.com/data_structures_algorithms/graph_data_structure.htm

https://github.com/agoragames/amico





{% highlight ruby %}

{% endhighlight %}




https://www.sitepoint.com/ruby-interview-questions-linked-lists-and-hash-tables/
https://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/

https://github.com/nateware/redis-objects

http://jimneath.org/2011/03/24/using-redis-with-ruby-on-rails.html#redis_data_types
